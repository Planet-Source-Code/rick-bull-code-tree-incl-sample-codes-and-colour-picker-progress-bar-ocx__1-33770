{\rtf1\ansi\ansicpg1252\deff0\deftab720{\fonttbl{\f0\fswiss MS Sans Serif;}{\f1\froman\fcharset2 Symbol;}{\f2\fswiss\fprq2 Tahoma;}{\f3\fswiss Tahoma;}}
{\colortbl\red0\green0\blue0;\red0\green0\blue128;\red0\green128\blue0;}
\deflang2057\pard\qc\plain\f2\fs24\ul String Case Module
\par \plain\f2\fs20\ul By Ricky Bull
\par \pard\plain\f2\fs20 
\par This module will let you change the case of strings to lower, UPPER, Sentence case, tOGGLE cASE, Title Case & VaRy cAsE:
\par 
\par \plain\f2\fs20\cf1 Option Explicit \plain\f2\fs20\cf2 'Declare all variables
\par 'Enumerations for case changing
\par \plain\f2\fs20\cf1 Public Enum \plain\f2\fs20 CaseConsts
\par     LowerCase = 0
\par     UpperCase = 1
\par     SentenceCase = 2
\par     ToggleCase = 3
\par     TitleCase = 4
\par     VaryCase = 5
\par \plain\f2\fs20\cf1 End Enum
\par \plain\f2\fs20\cf2 'Enumerations for case changing only lower & uppercase\plain\f2\fs20\cf1 
\par Public Enum \plain\f2\fs20 UpperLowerCaseConsts
\par     vbLowerCase = 0
\par     vbUpperCase = 1
\par \plain\f2\fs20\cf1 End Enum
\par \plain\f2\fs20 
\par \plain\f2\fs20\cf1 Public Function \plain\f2\fs20 ChangeCase(\plain\f2\fs20\cf1 ByVal \plain\f2\fs20 TheText \plain\f2\fs20\cf1 As String\plain\f2\fs20 , \plain\f2\fs20\cf1 ByVal \plain\f2\fs20 ChangeTo \plain\f2\fs20\cf1 As \plain\f2\fs20 CaseConsts, _
\par     \plain\f2\fs20\cf1 Optional ByVal \plain\f2\fs20 CaseOfFirstLetter \plain\f2\fs20\cf1 As \plain\f2\fs20 UpperLowerCaseConsts = UpperCase) \plain\f2\fs20\cf1 As String\plain\f2\fs20 
\par 
\par         \plain\f2\fs20\cf1 Dim \plain\f2\fs20 SelectedText \plain\f2\fs20\cf1 As String\plain\f2\fs20 
\par         \plain\f2\fs20\cf1 Dim \plain\f2\fs20 Found \plain\f2\fs20\cf1 As Long\plain\f2\fs20 
\par         \plain\f2\fs20\cf1 Dim \plain\f2\fs20 LastUpper \plain\f2\fs20\cf1 As Boolean\plain\f2\fs20 
\par         
\par         \plain\f2\fs20\cf1 Select Case \plain\f2\fs20 ChangeTo
\par             
\par             \plain\f2\fs20\cf2 'lower case
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case \plain\f2\fs20 LowerCase
\par                 \plain\f2\fs20\cf2 'Return lower case thetext
\par \plain\f2\fs20                 ChangeCase = LCase(TheText)
\par             
\par             \plain\f2\fs20\cf2 'UPPER CASE
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case\plain\f2\fs20  UpperCase
\par                 \plain\f2\fs20\cf2 'Return UPPER CASE THETEXT
\par \plain\f2\fs20                 ChangeCase = UCase(TheText)
\par             
\par \plain\f2\fs20\cf2             'Sentence case
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case\plain\f2\fs20  SentenceCase
\par \plain\f2\fs20\cf2                 'Uppercase the first letter
\par \plain\f2\fs20                 ChangeCase = UCase(Left(TheText, 1))
\par \plain\f2\fs20\cf2                 'Lowercase the rest
\par \plain\f2\fs20                 ChangeCase = ChangeCase & LCase(Mid(TheText, 2, Len(TheText)))
\par             
\par             \plain\f2\fs20\cf2 'tOGGLE cASE
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case\plain\f2\fs20  ToggleCase
\par                 \plain\f2\fs20\cf2 'Loop to the length of TheText
\par \plain\f2\fs20                 \plain\f2\fs20\cf1 For \plain\f2\fs20 Found = 1 \plain\f2\fs20\cf1 To\plain\f2\fs20  Len(TheText)
\par                     \plain\f2\fs20\cf2 'Get the letter in position of Found variable _
\par                      (i.e. one before current letter)\plain\f2\fs20 
\par                     SelectedText = Mid(TheText, Found, 1)
\par                     \plain\f2\fs20\cf2 'If it is lowercase
\par \plain\f2\fs20                     \plain\f2\fs20\cf1 If \plain\f2\fs20 IsLowerCase(SelectedText) = \plain\f2\fs20\cf1 True Then\plain\f2\fs20 
\par                         \plain\f2\fs20\cf2 'Change the case and add it to ChangeCase
\par \plain\f2\fs20                         ChangeCase = ChangeCase + UCase(SelectedText)
\par                     \plain\f2\fs20\cf2 'If it is uppercase
\par \plain\f2\fs20                     \plain\f2\fs20\cf1 Else\plain\f2\fs20 
\par                         \plain\f2\fs20\cf2 'Change the case and add it to ChangeCase
\par \plain\f2\fs20                         ChangeCase = ChangeCase + LCase(SelectedText)
\par                     \plain\f2\fs20\cf1 End If
\par \plain\f2\fs20                 \plain\f2\fs20\cf1 Next\plain\f2\fs20  Found
\par             
\par             \plain\f2\fs20\cf2 'Title Case
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case\plain\f2\fs20  TitleCase
\par \plain\f2\fs20\cf0                 ChangeCase = StrConv(TheText, vbProperCase)\plain\f2\fs20 
\par             
\par             \plain\f2\fs20\cf2 'VaRy tHe cAsE Of eAcH LeTtEr
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case\plain\f2\fs20  VaryCase
\par                 \plain\f2\fs20\cf2 'Lowercase it all
\par \plain\f2\fs20                 TheText = LCase(TheText)
\par \plain\f2\fs20\cf2                 'If uppercase is to be the first letter
\par \plain\f2\fs20                 \plain\f2\fs20\cf1 If\plain\f2\fs20  CaseOfFirstLetter = vbLowerCase \plain\f2\fs20\cf1 Then\plain\f2\fs20 
\par                     \plain\f2\fs20\cf2 'Set a variable for what the last case was
\par \plain\f2\fs20                     LastUpper = \plain\f2\fs20\cf1 False\plain\f2\fs20 
\par                     \plain\f2\fs20\cf2 'Change it
\par \plain\f2\fs20                     TheText = LCase(Mid(TheText, 1, 1)) & Mid(TheText, 2)
\par                 \plain\f2\fs20\cf2 'If lowercase is wanted
\par \plain\f2\fs20                 \plain\f2\fs20\cf1 ElseIf\plain\f2\fs20  CaseOfFirstLetter = vbUpperCase \plain\f2\fs20\cf1 Then\plain\f2\fs20 
\par                     \plain\f2\fs20\cf2 'Set a variable for what the last case was
\par \plain\f2\fs20                     LastUpper = \plain\f2\fs20\cf1 True\plain\f2\fs20 
\par                     \plain\f2\fs20\cf2 'Change it
\par \plain\f2\fs20                     TheText = UCase(Mid(TheText, 1, 1)) & Mid(TheText, 2)
\par                 \plain\f2\fs20\cf1 End If
\par \plain\f2\fs20                 
\par                 \plain\f2\fs20\cf2 'Loop from 2 to the length of the string
\par \plain\f2\fs20                 For \plain\f2\fs20\cf1 Found\plain\f2\fs20  = 2 To Len(TheText)
\par                     \plain\f2\fs20\cf2 'If last character was uppercase
\par \plain\f2\fs20                     \plain\f2\fs20\cf1 If\plain\f2\fs20  LastUpper = \plain\f2\fs20\cf1 True\plain\f2\fs20  \plain\f2\fs20\cf1 Then\plain\f2\fs20 
\par \plain\f2\fs20\cf2                         'Change the current character to lowercase
\par \plain\f2\fs20                         SelectedText = LCase(Mid(TheText, Found, 1))
\par \plain\f2\fs20\cf2                     'If the last character was lowercase
\par \plain\f2\fs20                     \plain\f2\fs20\cf1 Else
\par \plain\f2\fs20\cf2                         'Change the current character to uppercase
\par \plain\f2\fs20                         SelectedText = UCase(Mid(TheText, Found, 1))
\par                     \plain\f2\fs20\cf1 End If
\par \plain\f2\fs20                     \plain\f2\fs20\cf2 'TheText = the changed bit + the newly changed bit + the rest
\par \plain\f2\fs20                     TheText = Mid(TheText, 1, Found - 1) & SelectedText & Mid(TheText, Found + 1)
\par                     \plain\f2\fs20\cf2 'Invert lastupper
\par \plain\f2\fs20                     LastUpper = Not LastUpper
\par                 \plain\f2\fs20\cf1 Next\plain\f2\fs20  Found
\par \plain\f2\fs20\cf2                 'Return the modified text
\par \plain\f2\fs20                 ChangeCase = TheText
\par                 
\par         \plain\f2\fs20\cf1 End Select
\par \plain\f2\fs20     
\par \plain\f2\fs20\cf1 End Function
\par \plain\f2\fs20 
\par \plain\f2\fs20\cf1 Public Function\plain\f2\fs20  CountLettersInCase(\plain\f2\fs20\cf1 ByVal\plain\f2\fs20  TheText \plain\f2\fs20\cf1 As String\plain\f2\fs20 , _
\par     \plain\f2\fs20\cf1 ByVal\plain\f2\fs20  UpperOrLowerCase \plain\f2\fs20\cf1 As\plain\f2\fs20  UpperLowerCaseConsts) \plain\f2\fs20\cf1 As Long\plain\f2\fs20 
\par 
\par     \plain\f2\fs20\cf1 Dim\plain\f2\fs20  Counter \plain\f2\fs20\cf1 As Integer\plain\f2\fs20 
\par     \plain\f2\fs20\cf1 Dim\plain\f2\fs20  Letter \plain\f2\fs20\cf1 As String\plain\f2\fs20 
\par     
\par \plain\f2\fs20\cf2     'Loop for the length of TheText
\par \plain\f2\fs20     \plain\f2\fs20\cf1 For\plain\f2\fs20  Counter = 1 \plain\f2\fs20\cf1 To\plain\f2\fs20  Len(TheText)
\par         \plain\f2\fs20\cf1 Select Case\plain\f2\fs20  UpperOrLowerCase
\par             \plain\f2\fs20\cf2 'If the number of lowercase is wanted
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case\plain\f2\fs20  vbLowerCase
\par                 \plain\f2\fs20\cf2 'Get the current letter
\par \plain\f2\fs20                 Letter = Mid(TheText, Counter, 1)
\par                 \plain\f2\fs20\cf2 'If it is lowercase add one to count
\par \plain\f2\fs20                 \plain\f2\fs20\cf1 If\plain\f2\fs20  (Letter = "a") Or (Letter = "b") Or (Letter = "c") Or (Letter = "d") Or (Letter = "e") Or (Letter = "f") Or (Letter = "g") Or (Letter = "h") Or (Letter = "i") Or (Letter = "j") Or (Letter = "k") Or (Letter = "l") Or (Letter = "m") Or (Letter = "n") Or (Letter = "o") Or (Letter = "p") Or (Letter = "q") Or (Letter = "r") Or (Letter = "s") Or (Letter = "t") Or (Letter = "u") Or (Letter = "v") Or (Letter = "w") Or (Letter = "x") Or (Letter = "y") Or (Letter = "z") \plain\f2\fs20\cf1 Then\plain\f2\fs20  _
\par                     CountLettersInCase = CountLettersInCase + 1
\par             \plain\f2\fs20\cf2 'If the number of uppercase is wanted
\par \plain\f2\fs20             \plain\f2\fs20\cf1 Case\plain\f2\fs20  vbUpperCase
\par                 Letter = Mid(TheText, Counter, 1)
\par                 \plain\f2\fs20\cf2 'If it is uppercase add one to count
\par \plain\f2\fs20                 \plain\f2\fs20\cf1 If\plain\f2\fs20  (Letter = "A") Or (Letter = "B") Or (Letter = "C") Or (Letter = "D") Or (Letter = "E") Or (Letter = "F") Or (Letter = "G") Or (Letter = "H") Or (Letter = "I") Or (Letter = "J") Or (Letter = "K") Or (Letter = "L") Or (Letter = "M") Or (Letter = "N") Or (Letter = "O") Or (Letter = "P") Or (Letter = "Q") Or (Letter = "R") Or (Letter = "S") Or (Letter = "T") Or (Letter = "U") Or (Letter = "V") Or (Letter = "W") Or (Letter = "X") Or (Letter = "Y") Or (Letter = "Z") \plain\f2\fs20\cf1 Then\plain\f2\fs20  _
\par                     CountLettersInCase = CountLettersInCase + 1
\par         \plain\f2\fs20\cf1 End Select
\par \plain\f2\fs20     \plain\f2\fs20\cf1 Next Counter
\par \plain\f2\fs20         
\par \plain\f2\fs20\cf1 End Function
\par \plain\f2\fs20 
\par \plain\f2\fs20\cf1 Public Function\plain\f2\fs20  IsLowerCase(ByVal TheText As String) \plain\f2\fs20\cf1 As Boolean\plain\f2\fs20 
\par     
\par     \plain\f2\fs20\cf1 On Error GoTo\plain\f2\fs20  ErrorHandler
\par     \plain\f2\fs20\cf1 Dim\plain\f2\fs20  Counter \plain\f2\fs20\cf1 As Integer\plain\f2\fs20 
\par     \plain\f2\fs20\cf1 Dim\plain\f2\fs20  Letter \plain\f2\fs20\cf1 As String\plain\f2\fs20 
\par     
\par     \plain\f2\fs20\cf1 For\plain\f2\fs20  Counter = 1 \plain\f2\fs20\cf1 To\plain\f2\fs20  Len(TheText)
\par         Letter = Mid(TheText, Counter, 1)
\par \plain\f2\fs20\cf2         'Goto IsLetterLowerCase and find out if letter is lowercase
\par \plain\f2\fs20         \plain\f2\fs20\cf1 GoSub\plain\f2\fs20  IsLetterLowerCase
\par     \plain\f2\fs20\cf1 Next\plain\f2\fs20  Counter
\par     \plain\f2\fs20\cf2 'Return True
\par \plain\f2\fs20     IsLowerCase = \plain\f2\fs20\cf1 True\plain\f2\fs20 
\par     \plain\f2\fs20\cf2 'Exit function so as not cause an error
\par \plain\f2\fs20     \plain\f2\fs20\cf1 Exit Function
\par \plain\f2\fs20     
\par IsLetterLowerCase:
\par     \plain\f2\fs20\cf2 'If the passed variable = a to z (in lower case) the return true
\par \plain\f2\fs20     \plain\f2\fs20\cf1 If\plain\f2\fs20  (Letter = "A") Or (Letter = "B") Or (Letter = "C") Or (Letter = "D") Or (Letter = "E") Or (Letter = "F") Or (Letter = "G") Or (Letter = "H") Or (Letter = "I") Or (Letter = "J") Or (Letter = "K") Or (Letter = "L") Or (Letter = "M") Or (Letter = "N") Or (Letter = "O") Or (Letter = "P") Or (Letter = "Q") Or (Letter = "R") Or (Letter = "S") Or (Letter = "T") Or (Letter = "U") Or (Letter = "V") Or (Letter = "W") Or (Letter = "X") Or (Letter = "Y") Or (Letter = "Z") Then
\par         \plain\f2\fs20\cf2 'Return False
\par \plain\f2\fs20         IsLowerCase = \plain\f2\fs20\cf1 False\plain\f2\fs20 
\par         \plain\f2\fs20\cf1 Exit Function
\par \plain\f2\fs20     \plain\f2\fs20\cf2 'If the text is not a to z (in lower case) it is therefore uppercase (or other character)
\par \plain\f2\fs20     \plain\f2\fs20\cf1 Else\plain\f2\fs20 
\par         \plain\f2\fs20\cf2 'Go back to where we came form
\par \plain\f2\fs20         \plain\f2\fs20\cf1 Return
\par \plain\f2\fs20     \plain\f2\fs20\cf1 End If
\par \plain\f2\fs20     
\par     
\par ErrorHandler:
\par     \plain\f2\fs20\cf2 'Tell user that the string could not be identified as lower or uppercase if they want it
\par \plain\f2\fs20     \plain\f2\fs20\cf2 'If DisplayError = True Then _\plain\f2\fs20         
\par \pard\li720\plain\f2\fs20\cf2 MsgBox "Sorry, an error has occured. The specified text could not be identified as lower or uppercase text.", _
\par \pard\plain\f2\fs20\cf2             vbExclamation + vbOKOnly, "Error"
\par \plain\f2\fs20         
\par \plain\f2\fs20\cf1 End Function
\par \plain\f2\fs20 
\par \plain\f2\fs20\cf1 Public Function\plain\f2\fs20  IsUpperCase(\plain\f2\fs20\cf1 ByVal\plain\f2\fs20  TheText \plain\f2\fs20\cf1 As String\plain\f2\fs20 ) \plain\f2\fs20\cf1 As Boolean\plain\f2\fs20 
\par     
\par     \plain\f2\fs20\cf1 On Error GoTo\plain\f2\fs20  ErrorHandler
\par     \plain\f2\fs20\cf1 Dim\plain\f2\fs20  Counter \plain\f2\fs20\cf1 As Integer\plain\f2\fs20 
\par     \plain\f2\fs20\cf1 Dim\plain\f2\fs20  Letter \plain\f2\fs20\cf1 As String\plain\f2\fs20 
\par     
\par     \plain\f2\fs20\cf1 For\plain\f2\fs20  Counter = 1 \plain\f2\fs20\cf1 To\plain\f2\fs20  Len(TheText)
\par         Letter = Mid(TheText, Counter, 1)
\par         \plain\f2\fs20\cf2 'Goto IsLetterUpperCase and find out if letter is Uppercase
\par \plain\f2\fs20         \plain\f2\fs20\cf1 GoSub\plain\f2\fs20  IsLetterUpperCase
\par     \plain\f2\fs20\cf1 Next Counter
\par \plain\f2\fs20     \plain\f2\fs20\cf2 'Exit function so as not cause an error
\par \plain\f2\fs20     \plain\f2\fs20\cf1 Exit Function
\par \plain\f2\fs20     
\par IsLetterUpperCase:
\par     \plain\f2\fs20\cf2 'If the passed variable = A to Z (in upper case)
\par \plain\f2\fs20     If (Letter = "a") Or (Letter = "b") Or (Letter = "c") Or (Letter = "d") Or (Letter = "e") Or (Letter = "f") Or (Letter = "g") Or (Letter = "h") Or (Letter = "i") Or (Letter = "j") Or (Letter = "k") Or (Letter = "l") Or (Letter = "m") Or (Letter = "n") Or (Letter = "o") Or (Letter = "p") Or (Letter = "q") Or (Letter = "r") Or (Letter = "s") Or (Letter = "t") Or (Letter = "u") Or (Letter = "v") Or (Letter = "w") Or (Letter = "x") Or (Letter = "y") Or (Letter = "z") Then
\par         \plain\f2\fs20\cf2 'Return False
\par \plain\f2\fs20         IsUpperCase = \plain\f2\fs20\cf1 False\plain\f2\fs20 
\par \plain\f2\fs20\cf2         'Return True
\par \plain\f2\fs20         IsUpperCase = \plain\f2\fs20\cf1 True\plain\f2\fs20 
\par         \plain\f2\fs20\cf1 Exit Function
\par \plain\f2\fs20     \plain\f2\fs20\cf2 'If the text is not A to Z (in upper case) it is therefore lowercase (or other character)
\par \plain\f2\fs20     \plain\f2\fs20\cf1 Else\plain\f2\fs20 
\par \plain\f2\fs20\cf2         'Go back to where we came from
\par \plain\f2\fs20         \plain\f2\fs20\cf1 Return
\par \plain\f2\fs20     \plain\f2\fs20\cf1 End If
\par \plain\f2\fs20     
\par     
\par ErrorHandler:
\par     \plain\f2\fs20\cf2 'Tell user that the string could not be identified as lower or uppercase if they want it
\par \plain\f2\fs20     \plain\f2\fs20\cf2 'If DisplayError = True Then _
\par         MsgBox "Sorry, an error has occured. The specified text could not be identified as lower or uppercase text.", _
\par             vbExclamation + vbOKOnly, "Error"
\par \plain\f2\fs20         
\par \plain\f2\fs20\cf1 End Function
\par }
 