{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f32\froman\fcharset238\fprq2 Times New Roman CE;}{\f33\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f35\froman\fcharset161\fprq2 Times New Roman Greek;}{\f36\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f37\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f38\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f39\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f248\fswiss\fcharset238\fprq2 Tahoma CE;}
{\f249\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f251\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f252\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f253\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f254\fswiss\fcharset178\fprq2 Tahoma (Arabic);}
{\f255\fswiss\fcharset186\fprq2 Tahoma Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f27\fs24\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext15 Title;}{\s16\qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\f27\fs20\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext16 Subtitle;}}{\info{\title Creating A Selection or Focus Rectangle}{\author Ricky Bull}{\operator Ricky Bull}{\creatim\yr2001\mo3\dy17\hr22\min44}
{\revtim\yr2001\mo3\dy17\hr23\min25}{\version13}{\edmins34}{\nofpages2}{\nofwords301}{\nofchars1720}{\nofcharsws0}{\vern8247}}\paperw11906\paperh16838 
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\headery708\footery708\colsx708\endnhere\sectlinegrid360\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f27\fs24\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
Creating A Selection or Focus Rectangle
\par }\pard\plain \s16\qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f27\fs20\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {By Ricky Bull
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f27\fs20 
\par This example draws a focus rectangle on a form, like that of a command button with the focus or a selection rectangle like on the desktop when you drag with the left button held down. To do this simply place the code in the form and drag with the left but
ton on the form and see what happens:
\par 
\par }{\f27\fs20\cf9 Option Explicit }{\f27\fs20\cf11 'Declare all variables
\par 'API Declarations
\par }{\f27\fs20\cf9 Private Declare Function }{\f27\fs20 DrawFocusRect }{\f27\fs20\cf9 Lib }{\f27\fs20 "user32" (}{\f27\fs20\cf9 ByVal }{\f27\fs20 hdc }{\f27\fs20\cf9 As Long}{\f27\fs20 , lpRect }{\f27\fs20\cf9 As RECT}{\f27\fs20 ) }{\f27\fs20\cf9 As Long }{
\f27\fs20\cf11 'The API needed for making the focus rectangle
\par }{\f27\fs20\cf9 Private Declare Function }{\f27\fs20 GetDC }{\f27\fs20\cf9 Lib }{\f27\fs20 "user32" (}{\f27\fs20\cf9 ByVal }{\f27\fs20 hwnd }{\f27\fs20\cf9 As Long}{\f27\fs20 ) }{\f27\fs20\cf9 As Long }{\f27\fs20\cf11 'The API needed for getting object
\rquote s DC
\par }{\f27\fs20\cf9 Private Declare Function }{\f27\fs20 GetWindowRect }{\f27\fs20\cf9 Lib }{\f27\fs20 "user32" (}{\f27\fs20\cf9 ByVal }{\f27\fs20 hwnd }{\f27\fs20\cf9 As Long}{\f27\fs20 , lpRect }{\f27\fs20\cf9 As RECT}{\f27\fs20 ) }{\f27\fs20\cf9 As Long }{
\f27\fs20\cf11 'API needed for finding the window/object\rquote s Position}{\f27\fs20 
\par }{\f27\fs20\cf9 Private Type }{\f27\fs20 RECT }{\f27\fs20\cf11 'The type needed for holding the WindowRect}{\f27\fs20 
\par }\pard \ql \li510\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin510\itap0 {\f27\fs20 Left }{\f27\fs20\cf9 As Long}{\f27\fs20 
\par Top }{\f27\fs20\cf9 As Long}{\f27\fs20 
\par Right }{\f27\fs20\cf9 As Long}{\f27\fs20 
\par Bottom }{\f27\fs20\cf9 As Long}{\f27\fs20 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f27\fs20\cf9 End Type
\par Dim }{\f27\fs20 StartX }{\f27\fs20\cf9 As Single }{\f27\fs20\cf11 'The Start X that the cursor is at}{\f27\fs20 
\par }{\f27\fs20\cf9 Dim }{\f27\fs20 StartY }{\f27\fs20\cf9 As Single }{\f27\fs20\cf11 'The Start Y that the cursor is at}{\f27\fs20 
\par 
\par }{\f27\fs20\cf9 Private Sub }{\f27\fs20 Form_MouseDown(Button }{\f27\fs20\cf9 As Integer}{\f27\fs20 , Shift }{\f27\fs20\cf9 As Integer}{\f27\fs20 , X }{\f27\fs20\cf9 As Single}{\f27\fs20 , Y }{\f27\fs20\cf9 As Single}{\f27\fs20 )
\par 
\par }\pard \ql \li255\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin255\itap0 {\f27\fs20\cf9 On Error Resume Next }{\f27\fs20\cf11 'Carry if there is an error
\par 
\par 'Get the starting co-ordinates on mouse down event
\par }{\f27\fs20 StartX = X
\par StartY = Y
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f27\fs20 
\par }{\f27\fs20\cf9 End Sub
\par }{\f27\fs20 
\par }{\f27\fs20\cf9 Private Sub }{\f27\fs20 Form_MouseMove(Button }{\f27\fs20\cf9 As Integer}{\f27\fs20 , Shift }{\f27\fs20\cf9 As Integer}{\f27\fs20 , X }{\f27\fs20\cf9 As Single}{\f27\fs20 , Y }{\f27\fs20\cf9 As Single}{\f27\fs20 )
\par 
\par }\pard \ql \li255\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin255\itap0 {\f27\fs20\cf9 On Error Resume Next }{\f27\fs20\cf11 'Carry if there is an error}{\f27\fs20\cf9  
\par Dim }{\f27\fs20 FocusRect }{\f27\fs20\cf9 As }{\f27\fs20 RECT }{\f27\fs20\cf11 'For the size of the focus rectangle}{\f27\fs20 
\par 
\par }{\f27\fs20\cf9 If }{\f27\fs20 Button = vbLeftButton }{\f27\fs20\cf9 Then }{\f27\fs20\cf11 'Only do if it is the left mouse button
\par }\pard \ql \li510\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin510\itap0 {\f27\fs20 Me.Cls }{\f27\fs20\cf11 'Clear the form of any other rectangle sizes}{\f27\fs20 
\par }{\f27\fs20\cf11 'If the y co-ord is greater the the start co-ord
\par }{\f27\fs20\cf9 If }{\f27\fs20 Y > StartY }{\f27\fs20\cf9 Then}{\f27\fs20 
\par }\pard \ql \li765\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin765\itap0 {\f27\fs20\cf11 'Make the Focus Rectangle Bottom = the Current Y (in pixels)
\par }{\f27\fs20 FocusRect.Bottom = Y / Screen.TwipsPerPixelY
\par }{\f27\fs20\cf11 'Make the Focus Rectangle Top = the Start Y (in pixels)}{\f27\fs20 
\par FocusRect.Top = StartY / Screen.TwipsPerPixelY
\par }\pard \ql \li510\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin510\itap0 {\f27\fs20\cf11 'If it is less
\par }{\f27\fs20\cf9 Else
\par }\pard \ql \li765\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin765\itap0 {\f27\fs20\cf11 'Make the Focus Rectangle Top = the Current Y (in pixels)}{\f27\fs20 
\par FocusRect.Top = Y / Screen.TwipsPerPixelY
\par }{\f27\fs20\cf11 'Make the Focus Rectangle Bottom = the Start Y (in pixels)}{\f27\fs20 
\par FocusRect.Bottom = StartY / Screen.TwipsPerPixelY
\par }\pard \ql \li255\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin255\itap0 {\f27\fs20\cf9 End If
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f27\fs20 
\par }\pard \ql \li510\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin510\itap0 {\f27\fs20\cf11 'If the x co-ord is greater the the start co-ord
\par }{\f27\fs20\cf9 If }{\f27\fs20 X > StartX }{\f27\fs20\cf9 Then}{\f27\fs20 
\par }\pard \ql \li765\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin765\itap0 {\f27\fs20\cf11 'Make the Focus Rectangle Left = the Start X (in pixels)}{\f27\fs20 
\par FocusRect.Left = StartX / Screen.TwipsPerPixelX
\par }{\f27\fs20\cf11 'Make the Focus Rectangle Right = the Current X (in pixels)}{\f27\fs20 
\par FocusRect.Right = X / Screen.TwipsPerPixelX
\par 
\par }\pard \ql \li510\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin510\itap0 {\f27\fs20\cf11 
\par 'If it is less
\par }{\f27\fs20\cf9 Else
\par }\pard \ql \li765\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin765\itap0 {\f27\fs20\cf11 'Make the Focus Rectangle Left = the Current X (in pixels)}{\f27\fs20 
\par FocusRect.Left = X / Screen.TwipsPerPixelX
\par }{\f27\fs20\cf11 'Make the Focus Rectangle Right = the Start X (in pixels)}{\f27\fs20 
\par FocusRect.Right = StartX / Screen.TwipsPerPixelX
\par }\pard \ql \li510\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin510\itap0 {\f27\fs20\cf9 End If
\par }{\f27\fs20\cf11 'Draw the rectangle with the set co-ords in FocusRect
\par }{\f27\fs20\cf9 Call }{\f27\fs20 DrawFocusRect(GetDC(Me.hwnd), FocusRect)
\par }\pard \ql \li255\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin255\itap0 {\f27\fs20\cf9 End If
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f27\fs20 
\par }{\f27\fs20\cf9 End Sub
\par }{\f27\fs20 
\par }{\f27\fs20\cf9 Private Sub}{\f27\fs20  Form_MouseUp(Button }{\f27\fs20\cf9 As Integer}{\f27\fs20 , Shift }{\f27\fs20\cf9 As Integer}{\f27\fs20 , X }{\f27\fs20\cf9 As Single}{\f27\fs20 , Y }{\f27\fs20\cf9 As Single}{\f27\fs20 )
\par 
\par }\pard \ql \li255\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin255\itap0 {\f27\fs20\cf9 On Error Resume Next }{\f27\fs20\cf11 'Carry if there is an error
\par 
\par 'Clear the form when the mouse is up
\par }{\f27\fs20 Me.Cls
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f27\fs20 
\par }{\f27\fs20\cf9 End Sub
\par }}